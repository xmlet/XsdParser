<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright SDMX 2010 - http://www.sdmx.org -->
<xs:schema elementFormDefault="qualified"
  targetNamespace="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/query"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/query"
  xmlns:query="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/query"
  xmlns:common="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/common">
  <xs:import namespace="http://www.sdmx.org/resources/sdmxml/schemas/v2_1/common"
    schemaLocation="SDMXCommon.xsd"/>
  <xs:include schemaLocation="SDMXQueryBase.xsd"/>

  <xs:annotation>
    <xs:appinfo>SDMX Process Query Module</xs:appinfo>
    <xs:documentation>The process query module provides the construct of a query for a process.
    </xs:documentation>
  </xs:annotation>

  <xs:complexType name="ProcessQueryType">
    <xs:annotation>
      <xs:documentation>ProcessQueryType defines the structure of a process query. The parameters
        for the query are contained in the ProcessWhere element. The References element is used to
        indicate how objects that are referenced from the matched process scheme should be returned.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="StructuralMetadataQueryType">
        <xs:sequence>
          <xs:element name="ReturnDetails" type="MaintainableReturnDetailsType"/>
          <xs:element ref="ProcessWhere"/>
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="ProcessWhere" type="ProcessWhereType"
    substitutionGroup="StructuralMetadataWhere">
    <xs:annotation>
      <xs:documentation>ProcessWhere contains the parameters for a process query. All parameters
        must be matched for an object to satisfy the query. In addition to querying based on the
        basic maintainable properties, it is also possible to query based on the details of the
        process steps defined within the process. In any case, the entire process will be returned
        according the indicated return detail.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="ProcessWhereBaseType" abstract="true">
    <xs:annotation>
      <xs:documentation>ProcessWhereBaseType is an abstract base type which forms the basis for the
        ProcessWhereType.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction base="MaintainableWhereType">
        <xs:sequence>
          <xs:element name="Annotation" type="AnnotationWhereType" minOccurs="0"/>
          <xs:element name="URN" type="xs:anyURI" minOccurs="0"/>
          <xs:element name="ID" type="QueryIDType" minOccurs="0"/>
          <xs:element name="Name" type="QueryTextType" minOccurs="0"/>
          <xs:element name="Description" type="QueryTextType" minOccurs="0"/>
          <xs:element name="Version" type="common:VersionQueryType" minOccurs="0"/>
          <xs:element name="VersionTo" type="common:TimeRangeValueType" minOccurs="0"/>
          <xs:element name="VersionFrom" type="common:TimeRangeValueType" minOccurs="0"/>
          <xs:element name="VersionActive" type="xs:boolean" minOccurs="0"/>
          <xs:element name="AgencyID" type="QueryNestedIDType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="type" type="common:MaintainableTypeCodelistType" use="optional"
          fixed="Process">
          <xs:annotation>
            <xs:documentation>The type attribute indicates the type of constraint that is being
              queried for, with a default of Any, meaning both content and attachment constraints
              will be searched.
            </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ProcessWhereType">
    <xs:annotation>
      <xs:documentation>ProcessWhereType defines the parameters of a process query. All supplied
        parameters must be matched in order for an object to satisfy the query.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ProcessWhereBaseType">
        <xs:sequence>
          <xs:element name="ProcessStepWhere" type="ProcessStepWhereType" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>ProcessStepWhere is used to query for process steps matching the
                parameters supplied. It allows for nested process step queries so that hierarchical
                steps can be queried explicitly by their nested level, although a top level step
                will always result in a search for process steps at any level. This is an implicit
                set of "and" parameters, meaning all of the conditions must be met in order to
                return a match.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ProcessStepWhereType">
    <xs:annotation>
      <xs:documentation>ProcessStepWhereType defines a set of parameters for matching a category.
        All supplied parameters must be matched in order for an object to satisfy the query. In
        addition to the base item parameters, there are also parameters for matching based on the
        objects which serve as the input or output to the process step.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="IdentifiableWhereType">
        <xs:sequence>
          <xs:element name="InputOrOutputObject" type="InputOrOutputObjectType" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>InputOrOutputObject is a parameter for matching a process step based
                on the referenced object, and whether it is an input or an output to the step.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ProcessStepWhere" type="ProcessStepWhereType" minOccurs="0"
            maxOccurs="unbounded">
            <xs:annotation>
              <xs:documentation>ProcessStepWhere is used to query for process steps within a the
                particular process step. This is an implicit set of "and" parameters, meaning all of
                the conditions must be met in order to return a match.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="InputOrOutputObjectType">
    <xs:annotation>
      <xs:documentation>InputOrOutputObjectType describes the structure of input or output condition
        for a process step query. It contains reference to an object, as will as an attribute
        indicates whether the object should be an input, output, or either of the two to the step.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ObjectReference" type="common:ObjectReferenceType">
        <xs:annotation>
          <xs:documentation>ObjectReference is used to query for a process containing process steps
            where the referenced object is input or output to the process step.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="type" type="InputOutputTypeCodeType" default="Any">
      <xs:annotation>
        <xs:documentation>The type attribute is used to indicate whether the referenced object
          should be an input, output, or either of the two to the process step. The default for this
          is Any.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:simpleType name="InputOutputTypeCodeType">
    <xs:annotation>
      <xs:documentation>InputOutputTypeCodeType enumerates the role an object plays in a process
        step.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="Input">
        <xs:annotation>
          <xs:documentation>Input - referenced object is an input to the process step.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Output">
        <xs:annotation>
          <xs:documentation>Output - referenced object is an output to the process step.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="Any">
        <xs:annotation>
          <xs:documentation>Any - referenced object is either an input or an output to the process
            step.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>